peg_file! legacy_directx_x_parse("legacy_directx_x.rustpeg");
use legacy_directx_x::*;
use resources::*;

#[test]
fn test_load_file_1() {
    let data = r#"xof 0303txt 0032

        Frame polySurface1 {
        	FrameTransformMatrix {
        		1.000000,0.000000,-0.000000,0.000000,0.000000,1.000000,-0.000000,0.000000,-0.000000,-0.000000,1.000000,0.000000,0.000000,0.000000,-0.000000,1.000000;;
        	}
        	Mesh polySurfaceShape1 {
        		2;
        		-4.382881;  6.532472;  1.292141;,
        		-3.229391;  6.532472;  0.391409;;
        		2;
        		3;327,326,325;,
        		4;331,330,329,328;;
        		MeshNormals {
        			2;
        			-0.028629, 0.999570, 0.006254;,
        			-0.053262, 0.998496, 0.012994;;
        			2;
        			3;127,125,126;,
        			4;124,120,121,123;;
        		}
        		MeshTextureCoords {
        			2;
        			 0.899474;-0.274396;,
        			 0.678246;-0.182760;;
        		}
        	}
        }
    "#;
    let parsed = legacy_directx_x_parse::file(data);
    assert_eq!(parsed.unwrap().to_mesh("polySurfaceShape1".to_string()), Ok(Mesh {
        vertices: vec![
            -4.382881, 6.532472, 1.292141, 0.899474, -0.274396,
            -3.229391, 6.532472, 0.391409, 0.678246, -0.182760
        ],
        indices: vec![
            327,326,325,
            331,330,329,
            331,329,328
        ]
        }));
}


#[test]
fn test_load_file_2() {
    let data = r#"xof 0303txt 0032

    Frame pCube1 {
    	FrameTransformMatrix {
    		1.000000,0.000000,-0.000000,0.000000,0.000000,1.000000,-0.000000,0.000000,-0.000000,-0.000000,1.000000,0.000000,0.000000,0.000000,-0.000000,1.000000;;
    	}
    }
    Frame pCube2 {
    	FrameTransformMatrix {
    		1.000000,0.000000,-0.000000,0.000000,-0.000000,-1.000000,0.000000,0.000000,-0.000000,-0.000000,1.000000,0.000000,0.000000,0.000000,-0.000000,1.000000;;
    	}
    }
    Frame polySurface1 {
    	FrameTransformMatrix {
    		1.000000,0.000000,-0.000000,0.000000,0.000000,1.000000,-0.000000,0.000000,-0.000000,-0.000000,1.000000,0.000000,0.000000,0.000000,-0.000000,1.000000;;
    	}
    	Mesh polySurfaceShape1 {
    		2;
    		 0.856444;  0.000000; -1.511363;,
    		 0.856444;  0.000000; -1.511363;;
    		2;
    		4;3,2,1,0;,
    		4;67,66,65,64;;
    		MeshNormals {
    			2;
    			 0.654350, 0.437199,-0.616995;,
    			 0.061550, 0.425390,-0.902915;;
    			2;
    			4;15,14,26,13;,
    			4;26,27,12,13;;
    		}
    		MeshTextureCoords {
    			2;
    			 0.706463;-0.177258;,
    			 0.706463;-0.177258;;
    		}
    	}
    }
"#;
    let parsed = legacy_directx_x_parse::file(data);
    assert_eq!(parsed.unwrap().to_mesh("polySurfaceShape1".to_string()), Ok(Mesh {
        vertices: vec![
            0.856444, 0.000000, -1.511363, 0.706463, -0.177258,
            0.856444, 0.000000, -1.511363, 0.706463, -0.177258
        ],
        indices: vec![
            3,2,1,
            3,1,0,
            67,66,65,
            67,65,64
        ]
        }));
}

// 
// #[test]
// fn test_load_file_3() {
//     let data = r#"xof 0303txt 0032
//
//     AnimTicksPerSecond {
//     	24;
//     }
//     Frame group2 {
//     	FrameTransformMatrix {
//     		1.671187,0.000000,-0.000000,0.000000,0.000000,1.671187,-0.000000,0.000000,-0.000000,-0.000000,1.671187,0.000000,0.000000,0.000000,-0.000000,1.000000;;
//     	}
//     	Frame pCylinder1 {
//     		FrameTransformMatrix {
//     			1.065924,0.000000,-0.000000,0.000000,0.000000,1.442643,-0.000000,0.000000,-0.000000,-0.000000,1.065924,0.000000,0.000000,4.910839,-0.000000,1.000000;;
//     		}
//     		Mesh pCylinderShape1 {
//     			138;
//     			 0.163392; -4.546638;  0.740705;,
//     			 0.024672;  5.607431;  0.393235;;
//     			36;
//     			4;3,2,1,0;,
//     			3;137,136,135;;
//     			MeshNormals {
//     				37;
//     				 0.515080, 0.239357, 0.823043;,
//     				-0.050063, 0.994640,-0.090469;;
//     				36;
//     				4;3,2,1,0;,
//     				3;36,31,35;;
//     			}
//     			MeshTextureCoords {
//     				138;
//     				 0.193146;-0.010624;,
//     				 0.140010;-0.989376;;
//     			}
//     		}
//     	}
//     }
//     Frame polySurface2 {
//     	FrameTransformMatrix {
//     		1.132210,0.000000,-0.000000,0.000000,0.000000,1.039206,-0.000000,0.000000,-0.000000,-0.000000,1.132210,0.000000,-0.040420,-0.697239,-0.103186,1.000000;;
//     	}
//     	Mesh polySurfaceShape2 {
//     		216;
//     		-0.550677;  7.857163; -3.203464;,
//     		4;215,214,213,212;;
//     		MeshNormals {
//     			121;
//     			 0.242597, 0.095985,-0.965367;,
//     			-0.940271, 0.336344, 0.052566;;
//     			54;
//     			4;3,2,1,0;,
//     			4;118,120,117,115;;
//     		}
//     		MeshTextureCoords {
//     			216;
//     			 0.271819;-0.992710;,
//     			 0.995590;-0.191321;;
//     		}
//     	}
//     }
//     Frame polySurface3 {
//     	FrameTransformMatrix {
//     		1.107797,0.000000,-0.000000,0.000000,0.000000,1.039206,-0.000000,0.000000,-0.000000,-0.000000,1.107797,0.000000,-0.027192,-0.792217,-0.093974,1.000000;;
//     	}
//     	Mesh polySurfaceShape3 {
//     		384;
//     		 4.639883;  15.784966; -4.879051;,
//     		 0.354344;  21.163548;  0.633580;;
//     		96;
//     		4;3,2,1,0;,
//     		4;383,382,381,380;;
//     		MeshNormals {
//     			252;
//     			 0.974163, 0.223833, 0.030070;,
//     			-0.487885, 0.268263,-0.830665;;
//     			96;
//     			4;3,2,1,0;,
//     			4;251,250,246,247;;
//     		}
//     		MeshTextureCoords {
//     			384;
//     			 0.271819;-0.992710;,
//     			 0.995590;-0.514416;;
//     		}
//     	}
//     }
//     AnimationSet Idle1 {
//     	Animation {
//     		{ polySurface2 }
//     		AnimationKey {
//     			0;
//     			110;
//     			1;4;-1.000000,-0.000000,-0.000000, 0.000000;;,
//     			110;4;-1.000000,-0.000000,-0.000000, 0.000000;;;
//     		}
//     		AnimationKey {
//     			1;
//     			110;
//     			1;4; 1.132210, 1.039206, 1.132210;;,
//     			110;4; 1.132210, 1.039206, 1.132210;;;
//     		}
//     	}
//     	Animation {
//     		{ polySurface3 }
//     		AnimationKey {
//     			0;
//     			110;
//     			1;4;-1.000000,-0.000000,-0.000000, 0.000000;;,
//     			110;4;-1.000000,-0.000000,-0.000000, 0.000000;;;
//     		}
//     		AnimationKey {
//     			2;
//     			110;
//     			1;4;-0.027192,-0.792217,-0.093974;;,
//     			110;4;-0.027192,-0.792217,-0.093974;;;
//     		}
//     	}
//     }
//
// "#;
//     let parsed = legacy_directx_x_parse::file(data);
//     parsed.unwrap();
//     //assert!(parsed.is_ok());
// }
